{"version":3,"sources":["pizza-logo.svg","components/header/header.jsx","utils/apiservice.js","components/pizza-form/pizzaform.jsx","components/massa/massa.jsx","components/recheio/recheio.jsx","components/tamanho/tamanho.jsx","components/finalizar/finalizar.jsx","components/success/success.jsx","components/pizza-recomendada/pizzarecomendada.jsx","components/toastpontos/toastpontos.jsx","pages/main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Navbar","bg","className","Brand","src","logo","width","height","ApiService","GetMassas","fetch","then","res","ErrorHandler","json","GetTamanhos","GetRecheios","GetPontos","GetRecomendada","ok","Error","responseText","PizzaForm","selected","lista","passo","handleChange","Form","Group","Label","Control","onChange","as","value","map","opcao","Massa","listaMassas","nextStep","values","Container","Row","Col","Button","variant","onClick","e","preventDefault","Recheio","listaRecheios","prevStep","Tamanho","listaTamanhos","Finalizar","massa","readOnly","recheio","tamanho","Success","restartStep","Card","Body","Title","Text","PizzaRecomendada","lastStep","pizzaRecomendada","ToastPontos","pontos","recomendacaoAceita","hideToast","xs","Toast","onClose","show","delay","autohide","Main","state","step","setState","getRecheios","getTamanhos","getPontos","option","target","this","getMassas","getRecomendada","massas","nome","recheios","tamanhos","recomendada","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f45b71dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza-logo.c5022d44.svg\";","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport logo from \"../../pizza-logo.svg\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"danger\" className=\"justify-content-center\">\r\n        <Navbar.Brand className=\"d-flex\">\r\n          <img src={logo} width=\"50\" height=\"50\" />\r\n          <h1 className=\"font-weight-bold brandTitle\">GetPizza</h1>\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n","const ApiService = {\r\n  GetMassas: () => {\r\n    return fetch(`https://run.mocky.io/v3/e72e9608-0970-4155-8b79-69eb8e47c652`)\r\n      .then((res) => ApiService.ErrorHandler(res))\r\n      .then((res) => res.json());\r\n  },\r\n\r\n  GetTamanhos: () => {\r\n    return fetch(`https://run.mocky.io/v3/ddcaeacd-f7ba-4eff-afe9-0bfbb784c1af`)\r\n      .then((res) => ApiService.ErrorHandler(res))\r\n      .then((res) => res.json());\r\n  },\r\n\r\n  GetRecheios: () => {\r\n    return fetch(`https://run.mocky.io/v3/765ed518-81ab-4902-8393-23823fcaa906`)\r\n      .then((res) => ApiService.ErrorHandler(res))\r\n      .then((res) => res.json());\r\n  },\r\n\r\n  GetPontos: () => {\r\n    return fetch(`https://run.mocky.io/v3/4ab31968-c785-4db4-8649-a71b35518258`)\r\n      .then((res) => ApiService.ErrorHandler(res))\r\n      .then((res) => res.json());\r\n  },\r\n\r\n  GetRecomendada: () => {\r\n    return fetch(`https://run.mocky.io/v3/3604b124-d3c1-4bf5-809b-73b162dad47c`)\r\n      .then((res) => ApiService.ErrorHandler(res))\r\n      .then((res) => res.json());\r\n  },\r\n\r\n  ErrorHandler: (res) => {\r\n    if (!res.ok) {\r\n      throw Error(res.responseText);\r\n    }\r\n    return res;\r\n  },\r\n};\r\nexport default ApiService;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nconst PizzaForm = ({ selected, lista, passo, handleChange }) => {\r\n  return (\r\n    <>\r\n      <Form.Group>\r\n        <Form.Label>\r\n          <h4 className=\"titles\">Selecione o/a {passo}:</h4>\r\n        </Form.Label>\r\n        <Form.Control\r\n          className=\"font-weight-bold\"\r\n          onChange={handleChange(passo)}\r\n          as=\"select\"\r\n          value={selected}\r\n        >\r\n          {lista.map((opcao) => (\r\n            <option>{opcao}</option>\r\n          ))}\r\n        </Form.Control>\r\n      </Form.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PizzaForm;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport PizzaForm from \"../pizza-form/pizzaform.jsx\";\r\n\r\nconst Massa = ({ selected, listaMassas, nextStep, handleChange, values }) => {\r\n  const continuar = (e) => {\r\n    e.preventDefault();\r\n    nextStep();\r\n  };\r\n\r\n  const passo = \"massa\";\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"orderContainer\">\r\n        <Row className=\"d-flex justify-content-center\">\r\n          <h2 className=\"titles\">Monte a sua pizza</h2>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <PizzaForm\r\n              lista={listaMassas}\r\n              handleChange={handleChange}\r\n              passo={passo}\r\n              selected={selected}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"firstStepRow\">\r\n          <Button variant=\"info\" onClick={continuar}>\r\n            Próximo\r\n          </Button>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Massa;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport PizzaForm from \"../pizza-form/pizzaform.jsx\";\r\n\r\nconst Recheio = ({\r\n  selected,\r\n  listaRecheios,\r\n  nextStep,\r\n  prevStep,\r\n  handleChange,\r\n  values,\r\n}) => {\r\n  const continuar = (e) => {\r\n    e.preventDefault();\r\n    nextStep();\r\n  };\r\n  const voltar = (e) => {\r\n    e.preventDefault();\r\n    prevStep();\r\n  };\r\n\r\n  const passo = \"recheio\";\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"orderContainer\">\r\n        <Row>\r\n          <Col>\r\n            <PizzaForm\r\n              selected={selected}\r\n              lista={listaRecheios}\r\n              handleChange={handleChange}\r\n              passo={passo}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"stepsRow\">\r\n          <Button variant=\"danger\" onClick={voltar} className=\"voltarButton\">\r\n            Voltar\r\n          </Button>\r\n          <Button variant=\"info\" onClick={continuar} className=\"proximoButton\">\r\n            Próximo\r\n          </Button>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Recheio;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport PizzaForm from \"../pizza-form/pizzaform.jsx\";\r\n\r\nconst Tamanho = ({\r\n  selected,\r\n  listaTamanhos,\r\n  nextStep,\r\n  prevStep,\r\n  handleChange,\r\n  values,\r\n}) => {\r\n  const continuar = (e) => {\r\n    e.preventDefault();\r\n    nextStep();\r\n  };\r\n  const voltar = (e) => {\r\n    e.preventDefault();\r\n    prevStep();\r\n  };\r\n\r\n  const passo = \"tamanho\";\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"orderContainer\">\r\n        <Row>\r\n          <Col>\r\n            <PizzaForm\r\n              selected={selected}\r\n              lista={listaTamanhos}\r\n              handleChange={handleChange}\r\n              passo={passo}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"stepsRow\">\r\n          <Button variant=\"danger\" onClick={voltar} className=\"voltarButton\">\r\n            Voltar\r\n          </Button>\r\n          <Button variant=\"info\" onClick={continuar} className=\"proximoButton\">\r\n            Próximo\r\n          </Button>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tamanho;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst Finalizar = ({ nextStep, prevStep, values }) => {\r\n  const continuar = (e) => {\r\n    e.preventDefault();\r\n    nextStep();\r\n  };\r\n  const voltar = (e) => {\r\n    e.preventDefault();\r\n    prevStep();\r\n  };\r\n  return (\r\n    <>\r\n      <Container className=\"orderContainer\">\r\n        <Form>\r\n          <Form.Group>\r\n            <h3 className=\"titles\">Confira seu pedido!</h3>\r\n            <Form.Label className=\"selectLabel\">Massa:</Form.Label>\r\n            <Form.Control\r\n              value={values.massa}\r\n              readOnly\r\n              className=\"font-weight-bold\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label className=\"selectLabel\">Recheio:</Form.Label>\r\n            <Form.Control\r\n              value={values.recheio}\r\n              readOnly\r\n              className=\"font-weight-bold\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label className=\"selectLabel\">Tamanho:</Form.Label>\r\n            <Form.Control\r\n              value={values.tamanho}\r\n              readOnly\r\n              className=\"font-weight-bold\"\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n        <Row className=\"stepsRow\">\r\n          <Button variant=\"danger\" onClick={voltar} className=\"voltarButton\">\r\n            Voltar\r\n          </Button>\r\n          <Button variant=\"info\" onClick={continuar} className=\"proximoButton\">\r\n            Próximo\r\n          </Button>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Finalizar;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst Success = ({ restartStep }) => {\r\n  const restart = (e) => {\r\n    e.preventDefault();\r\n    restartStep();\r\n  };\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <Card className=\"successCard\">\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <h3 className=\"titles\">Prontinho!</h3>\r\n          </Card.Title>\r\n          <Card.Text className=\"feedbackText\">\r\n            Muito obrigado pelo seu pedido! Sua pizza já está sendo preparada!\r\n          </Card.Text>\r\n          <Button variant=\"danger\" onClick={restart}>\r\n            Voltar para o início\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Success;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nconst PizzaRecomendada = ({ lastStep, pizzaRecomendada }) => {\r\n  const reachFinalizar = (e) => {\r\n    e.preventDefault();\r\n    lastStep();\r\n  };\r\n\r\n  const passo = \"massa\";\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"orderContainer d-flex flex-column\">\r\n        <Row className=\"justify-content-center\">\r\n          <h2 className=\"titles\">Pedir a pizza do dia</h2>\r\n        </Row>\r\n        <Row className=\"justify-content-center mt-2 pizzaDayText\">\r\n          <p className=\"pizzaDayText\">\r\n            Pedindo a nossa pizza do dia você ganha pontos do GetPizza! Você\r\n            pode juntar estes ponto e troca-los por uma pizza do dia!\r\n          </p>\r\n        </Row>\r\n        <Row className=\"justify-content-center mt-2 pizzaDayText\">\r\n          <p className=\"pizzaDayText\">\r\n            A pizza do dia é de tamanho médio e de massa do tipo pan.\r\n          </p>\r\n        </Row>\r\n        <Row className=\"justify-content-center mt-1 \">\r\n          <h5 className=\"selectLabel\">\r\n            A pizza do dia é: {pizzaRecomendada?.recheio}\r\n          </h5>\r\n        </Row>\r\n        <Row className=\"justify-content-center mt-3 mb-2\">\r\n          <Button variant=\"info\" onClick={reachFinalizar}>\r\n            Pedir\r\n          </Button>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PizzaRecomendada;\r\n","import React from \"react\";\r\nimport Toast from \"react-bootstrap/Toast\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst ToastPontos = ({ pontos, recomendacaoAceita, hideToast }) => {\r\n  return (\r\n    <>\r\n      <Row className=\"fixed-top position-absolute mt-5 ml-2\">\r\n        <Col xs={6}>\r\n          <Toast\r\n            onClose={hideToast}\r\n            show={recomendacaoAceita}\r\n            delay={4500}\r\n            autohide\r\n          >\r\n            <Toast.Header>\r\n              <strong className=\"mr-auto\">Parabéns</strong>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Você escolheu uma pizza do dia e vai ganhar {pontos} pontos!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToastPontos;\r\n","import React, { Component } from \"react\";\r\nimport ApiService from \"../utils/apiservice\";\r\nimport Massa from \"../components/massa/massa.jsx\";\r\nimport Recheio from \"../components/recheio/recheio.jsx\";\r\nimport Tamanho from \"../components/tamanho/tamanho.jsx\";\r\nimport Finalizar from \"../components/finalizar/finalizar.jsx\";\r\nimport Success from \"../components/success/success.jsx\";\r\nimport PizzaRecomendada from \"../components/pizza-recomendada/pizzarecomendada.jsx\";\r\nimport ToastPontos from \"../components/toastpontos/toastpontos.jsx\";\r\n\r\nexport class Main extends Component {\r\n  state = {\r\n    step: 1,\r\n    massa: null,\r\n    recheio: null,\r\n    tamanho: null,\r\n    pontos: null,\r\n    recomendacaoAceita: false,\r\n    pizzaRecomendada: null,\r\n    listaMassas: [],\r\n    listaRecheios: [],\r\n    listaTamanhos: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMassas();\r\n    this.getRecomendada();\r\n  }\r\n\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n    const nextStep = step + 1;\r\n    this.setState({\r\n      step: nextStep,\r\n    });\r\n    switch (nextStep) {\r\n      case 2:\r\n        return this.getRecheios();\r\n      case 3:\r\n        return this.getTamanhos();\r\n    }\r\n  };\r\n\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    const prevStep = step - 1;\r\n    this.setState({\r\n      step: step - 1,\r\n    });\r\n    switch (prevStep) {\r\n      case 2:\r\n        return this.getRecheios();\r\n      case 3:\r\n        return this.getTamanhos();\r\n    }\r\n  };\r\n\r\n  restartStep = () => {\r\n    const { step } = this.state;\r\n    this.setState({\r\n      step: 1,\r\n    });\r\n  };\r\n\r\n  lastStep = () => {\r\n    const { pizzaRecomendada } = this.state;\r\n    this.getPontos();\r\n    this.setState({\r\n      step: 4,\r\n      massa: pizzaRecomendada.massa,\r\n      recheio: pizzaRecomendada.recheio,\r\n      tamanho: pizzaRecomendada.tamanho,\r\n      recomendacaoAceita: true,\r\n    });\r\n  };\r\n\r\n  hideToast = () => {\r\n    this.setState({\r\n      recomendacaoAceita: false,\r\n    });\r\n  };\r\n\r\n  getMassas() {\r\n    ApiService.GetMassas().then((res) => {\r\n      const massas = res.massa.map((massa) => {\r\n        return massa.nome;\r\n      });\r\n      this.setState({\r\n        listaMassas: massas,\r\n        massa: this.state.massa || massas[0],\r\n      });\r\n    });\r\n  }\r\n\r\n  getRecheios() {\r\n    ApiService.GetRecheios().then((res) => {\r\n      const recheios = res.recheio.map((recheio) => {\r\n        return recheio.nome;\r\n      });\r\n\r\n      this.setState({\r\n        listaRecheios: recheios,\r\n        recheio: this.state.recheio || recheios[0],\r\n      });\r\n    });\r\n  }\r\n\r\n  getTamanhos() {\r\n    ApiService.GetTamanhos().then((res) => {\r\n      const tamanhos = res.tamanho.map((tamanho) => {\r\n        return tamanho.nome;\r\n      });\r\n      this.setState({\r\n        listaTamanhos: tamanhos,\r\n        tamanho: this.state.tamanho || tamanhos[0],\r\n      });\r\n    });\r\n  }\r\n\r\n  getPontos() {\r\n    ApiService.GetPontos().then((res) => {\r\n      const pontos = res.pontos;\r\n      this.setState({ pontos });\r\n    });\r\n  }\r\n\r\n  getRecomendada() {\r\n    ApiService.GetRecomendada().then((res) => {\r\n      const recomendada = res;\r\n      this.setState({ pizzaRecomendada: recomendada });\r\n    });\r\n  }\r\n\r\n  handleChange = (option) => (e) => {\r\n    this.setState({ [option]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      step,\r\n      listaMassas,\r\n      listaRecheios,\r\n      listaTamanhos,\r\n      pizzaRecomendada,\r\n      recomendacaoAceita,\r\n      pontos,\r\n    } = this.state;\r\n    const { massa, recheio, tamanho } = this.state;\r\n    const values = { massa, recheio, tamanho };\r\n\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <>\r\n            <Massa\r\n              selected={massa}\r\n              listaMassas={listaMassas}\r\n              nextStep={this.nextStep}\r\n              handleChange={this.handleChange}\r\n              values={values}\r\n            />\r\n            <div className=\"d-flex justify-content-center mt-4\">\r\n              <h3 className=\"titles\">Ou você pode...</h3>\r\n            </div>\r\n            <PizzaRecomendada\r\n              pizzaRecomendada={pizzaRecomendada}\r\n              lastStep={this.lastStep}\r\n            />\r\n          </>\r\n        );\r\n      case 2:\r\n        return (\r\n          <Recheio\r\n            selected={recheio}\r\n            listaRecheios={listaRecheios}\r\n            nextStep={this.nextStep}\r\n            prevStep={this.prevStep}\r\n            handleChange={this.handleChange}\r\n            values={values}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <Tamanho\r\n            selected={tamanho}\r\n            listaTamanhos={listaTamanhos}\r\n            nextStep={this.nextStep}\r\n            prevStep={this.prevStep}\r\n            handleChange={this.handleChange}\r\n            values={values}\r\n          />\r\n        );\r\n      case 4:\r\n        return (\r\n          <>\r\n            <Finalizar\r\n              nextStep={this.nextStep}\r\n              prevStep={this.prevStep}\r\n              values={values}\r\n            />\r\n            <ToastPontos\r\n              hideToast={this.hideToast}\r\n              recomendacaoAceita={recomendacaoAceita}\r\n              pontos={pontos}\r\n            />\r\n          </>\r\n        );\r\n      case 5:\r\n        return <Success restartStep={this.restartStep} />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header/header.jsx\";\nimport Main from \"./pages/main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}